{
  "apiService": {
    "connectionErrorMsg": "Connection Error",
    "serverErrorMsg": "Server Error"
  },
  "passwordStrengthIndicator": {
    "insufficientLbl": "Insufficient",
    "weakLbl": "Weak",
    "strongLbl": "Strong"
  },
  "devInfo": {
    "apiUrlLbl": "Api URL",
    "branchLbl": "Branch",
    "commitLbl": "Commit"
  },
  "rule": {
    "premiseLbl": "Premise",
    "theoremLbl": "Theorem",
    "tautologicalImplicationLbl": "Tautological implication",
    "negationIntroductionLbl": "Negation Introduction",
    "negationEliminationLbl": "Negation Elimination",
    "conditionalIntroductionLbl": "Conditional Introduction",
    "conditionalEliminationLbl": "Conditional Elimination",
    "conjunctionIntroductionLbl": "Conjunction Introduction",
    "conjunctionEliminationLbl": "Conjunction Elimination",
    "disjunctionIntroductionLbl": "Disjunction Introduction",
    "disjunctionEliminationLbl": "Disjunction Elimination",
    "biconditionalIntroductionLbl": "Biconditional Introduction",
    "biconditionalEliminationLbl": "Biconditional Elimination",
    "explosionLbl": "Explosion",
    "universalInstantiationLbl": "Universal Instantiation",
    "universalGeneralizationLbl": "Universal Generalization",
    "existentialInstantiationLbl": "Existential Instantiation",
    "existentialGeneralizationLbl": "Existential Generalization"
  },
  "deductionSteps": {
    "stepNumberLbl": "Step Number",
    "stepNumberAbbreviatedLbl": "#",
    "assumptionsLbl": "Assumptions",
    "assumptionsAbbreviatedLbl": "A",
    "formulaLbl": "Formula",
    "formulaAbbreviatedLbl": "F",
    "ruleLbl": "Rule",
    "ruleAbbreviatedLbl": "R",
    "premisesLbl": "Premises",
    "premisesAbbreviatedLbl": "P"
  },
  "deductionEditor": {
    "graphLbl": "Graph",
    "enterThePremiseLbl": "Enter the premise",
    "enterTheConsequentLbl": "Enter the consequent",
    "enterTheDisjunctLbl": "Enter the disjunct",
    "enterTheLeftDisjunctLbl": "Enter the left disjunct",
    "enterTheRightDisjunctLbl": "Enter the right disjunct",
    "changeNewDisjunctPositionLbl": "Change new disjunct position",
    "chooseAFreeVariableLbl": "Choose a free variable",
    "enterTheQuantificationVariableLbl": "Enter the quantification variable",
    "enterTheInstanceVariableLbl": "Enter the instance variable",
    "enterTheBoundTermLbl": "Enter the bound term",
    "chooseTheConjunctLbl": "Choose the conjunct",
    "rulesLbl": "Rules",
    "enterTheFormulaLbl": "Enter the formula",
    "invalidTautologicalImplicationMsg": "Invalid tautological implication.",
    "instanceVariableBecomesIllegallyBoundMsg": "Instance variable becomes illegally bound.",
    "instanceVariableAlreadyDependantInDependencyGraphMsg": "Instance variable already appears as dependant in dependency graph.",
    "usageOfThisInstanceVariableResultsInCyclicDependenciesMsg": "Usage of this instance variable results in cyclic dependencies.",
    "introducedQuantificatorIllegallyBindsMsg": "Introduced quantificator illegally binds.",
    "introducedBoundVariableBecomesIllegallyBoundMsg": "Introduced bound variable becomes illegally bound.",
    "introducedInstanceVariableBecomesIllegallyBoundMsg": "Introduced instance variable becomes illegally bound.",
    "ruleCantBeAppliedToSelectedPremisesMsg": "Rule \"{{rule}}\" can't be applied to selected steps.",
    "deleteDialog": {
      "title": "Delete steps?",
      "content": "Are you sure you want to delete all steps from step {{step}} til the end of deduction?"
    },
    "graphDialog": {
      "title": "Term dependencies graph",
      "close": "Close"
    },
    "invalidInstanceVariableSymbol": "\"{{sym}}\" is not a valid individual variable symbol.",
    "symbolAlreadyUsed": "Symbol \"{{sym}}\" is already used and it isn't a valid individual variable.",
    "negationLbl": "Negation",
    "conditionalLbl": "Conditional",
    "conjunctionLbl": "Conjunction",
    "disjunctionLbl": "Disjunction",
    "biconditionalLbl": "Biconditional",
    "universalQuantifierLbl": "Universal quantifier",
    "existentialQuantifierLbl": "Existential quantifier",
    "syntaxErrorMsg": "Syntax error at line {{location.line}}, column {{location.column}}.",
    "recognizedAsPrefixUsedAsInfixMsg": "Symbol {{sym}} was recognized as prefix, but then it was used as an infix.",
    "recognizedAsInfixUsedAsPrefixMsg": "Symbol {{sym}} was recognized as an infix, but then it was used as a prefix.",
    "symbolUsedWithWrongNumberOfArgumentsMsg": "Symbol {{sym}} was recognized as {{recognizedArity}}-ary but was used with {{usedArity}} arguments.",
    "recognizedAsSententialUsedAsNominalMsg": "Symbol {{sym}} was recognized as formula symbol but was used where term symbol was expected.",
    "recognizedAsNominalUsedAsSententialMsg": "Symbol {{sym}} was recognized as term symbol but was used where formula symbol was expected.",
    "boundSymbolNotTermMsg": "Formula symbol {{sym}} occurred as bound while only terms can be bound.",
    "boundSymbolNotNullaryMsg": "{{arity}}-ary symbol {{sym}} occurred as bound while only nullary terms can be bound."
  },
  "termDependencies": {
    "resetLbl": "Reset",
    "fitLbl": "Fit",
    "centerLbl": "Center",
    "zoomOutLbl": "Zoom Out",
    "zoomInLbl": "Zoom In",
    "plotHorizontallyLbl": "Plot Horizontally",
    "plotVerticallyLbl": "Plot Vertically",
    "listLbl": "List",
    "graphLbl": "Graph"
  },
  "loginPage": {
    "title": "Login",
    "emailLbl": "Email",
    "emailNotValidMsg": "Email is not valid",
    "passwordLbl": "Password",
    "passwordNotProvidedMsg": "Password not provided",
    "loginLbl": "Login",
    "invalidCredentialsMsg": "Provided credentials are invalid",
    "forgotPasswordLbl": "Forgot password?",
    "dontHaveAnAccountYet": "Don't have an account yet?"
  },
  "registerPage": {
    "title": "Register",
    "emailLbl": "Email",
    "emailNotValidMsg": "Email is not valid",
    "passwordLbl": "Password",
    "repeatThePasswordMsg": "Repeat the password",
    "passwordNotProvidedMsg": "Password is not provided",
    "passwordNotStrongEnoughMsg": "Password is not strong enough",
    "passwordsDontMatch": "Passwords don't match",
    "registerLbl": "Register",
    "emailAlreadyBeingUsedMsg": "Provided email is already being used.",
    "alreadyHaveAnAccountMsg": "Already have an account?"
  },
  "forgotPasswordPage": {
    "title": "Forgot Password?",
    "text": "If you forgot your password we can send you a recovery link to your email.",
    "emailLbl": "Email",
    "emailNotValidMsg": "Email you used doesn't correspond to any user.",
    "sendRecoveryLinkLbl": "Send Recovery Link",
    "backToLoginLbl": "Back to Login",
    "successMsg": "An email has been sent to your address with further instructions on changing your password."
  },
  "changePasswordPage": {
    "title": "Change Password",
    "passwordLbl": "Password",
    "repeatThePasswordMsg": "Repeat the password",
    "passwordNotProvidedMsg": "Password is not provided",
    "passwordNotStrongEnoughMsg": "Password is not strong enough",
    "passwordsDontMatch": "Passwords don't match",
    "backToLoginLbl": "Back to Login",
    "successMsg": "You successfully changed your password.",
    "emailNotValidMsg": "Email you used doesn't correspond to any user.",
    "expiredLinkMsg": "Link we sent you has expired. If you still want to change your password you can request another recovery email."
  },
  "header": {
    "projectsLbl": "Projects",
    "userLbl": "User",
    "logoutLbl": "Logout",
    "usersLbl": "Users"
  },
  "usersPage": {
    "emailLbl": "Email",
    "verificationLbl": "Verification",
    "createdAtLbl": "Created at"
  },
  "projectsPage": {
    "createProjectLbl": "Create Project",
    "firstOrderLbl": "First Order",
    "propositionalRulesLbl": "Propositional Rules",
    "nameNotProvidedMsg": "Name not provided",
    "propositionalRulesSetDescription": {
      "allLbl": "All",
      "tautologicalImplicationOnlyLbl": "Tautological Implication Only",
      "specificRulesOnlyLbl": "Specific Rules Only"
    },
    "firstOrderAbbreviatedLbl": "FO",
    "createDeductionLbl": "Create Deduction"
  },
  "submitLbl": "Submit",
  "cancelLbl": "Cancel",
  "deleteLbl": "Delete",
  "yesLbl": "Yes",
  "noLbl": "No",
  "closeLbl": "Close",
  "orderAscendingLbl": "Order Ascending",
  "orderDescendingLbl": "Order Descending",
  "nameLbl": "Name",
  "descriptionLbl": "Description"
}
